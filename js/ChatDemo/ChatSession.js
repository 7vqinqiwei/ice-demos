// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6b
//
// <auto-generated>
//
// Generated from file `ChatSession.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("zeroc-icejs").Ice;
    var __M = Ice.__M;
    var Chat = require("Chat").Chat;
    var Glacier2 = require("zeroc-icejs").Glacier2;
    var Slice = Ice.Slice;

    /**
     * The ChatRoomCallback interface is the interface that clients implement
     * as their callback object.
     * 
     * The server calls operations of this interface to communicate
     * with connected clients.
     * 
     **/
    Chat.ChatRoomCallback = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 0,
        [
            "::Chat::ChatRoomCallback",
            "::Ice::Object"
        ],
        -1, undefined, undefined, false);

    Chat.ChatRoomCallbackPrx = Slice.defineProxy(Ice.ObjectPrx, Chat.ChatRoomCallback.ice_staticId, undefined);

    Slice.defineOperations(Chat.ChatRoomCallback, Chat.ChatRoomCallbackPrx,
    {
        "init": [, , , , , , [["Ice.StringSeqHelper"]], , , , ],
        "send": [, , , , , , [[4], [7], [7]], , , , ],
        "join": [, , , , , , [[4], [7]], , , , ],
        "leave": [, , , , , , [[4], [7]], , , , ]
    });

    /**
     * A ChatSession is a custom Glacier2::Session for clients that use
     * Glacier2 and support callbacks (C++, Java, and .NET clients).
     * 
     * @see Glacier2::Session
     * 
     **/
    Chat.ChatSession = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            Glacier2.Session
        ], 0,
        [
            "::Chat::ChatSession",
            "::Glacier2::Session",
            "::Ice::Object"
        ],
        -1, undefined, undefined, false);

    Chat.ChatSessionPrx = Slice.defineProxy(Ice.ObjectPrx, Chat.ChatSession.ice_staticId, [
        Glacier2.SessionPrx]);

    Slice.defineOperations(Chat.ChatSession, Chat.ChatSessionPrx,
    {
        "setCallback": [, , , , , , [["Chat.ChatRoomCallbackPrx"]], , , , ],
        "send": [, , , , , [4], [[7]], , 
        [
            Chat.InvalidMessageException
        ], , ]
    });
    exports.Chat = Chat;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
