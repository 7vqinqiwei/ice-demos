// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// **********************************************************************

ext.useLocalOnly = gradle.startParameter.isOffline()

// Determine the name of the Slice-to-Java translator
def isWindows = false
def slice2java = "slice2java"
def slice2freezej = "slice2freezej"
if (System.properties['os.name'].toLowerCase().contains('windows'))
{
    isWindows = true
    slice2java = "slice2java.exe"
    slice2freezej = "slice2freezej.exe"
}

def env = System.getenv()
def srcdist = false
def iceDir

ext.iceMavenRepo = env['ICE_MAVEN_REPOSITORY']
if (ext.iceMavenRepo == null) {
    ext.iceMavenRepo = "repo.zeroc.com"
}

// First check if iceHome was set in gradle.properties
// Otherwise check if ICE_HOME is set and it points at a valid installation
if (iceHome)
{
    def translator = new File("$iceHome/bin/$slice2java")
    if (!translator.exists())
    {
        translator = new File("$iceHome/cpp/bin/$slice2java")
        if (!translator.exists())
        {
            throw new GradleException("Unable to find $slice2java in $iceHome, please verify iceHome is " +
                                      "properly configured in gradle.properties and Ice is correctly installed.")
        }
        srcdist = true
    }
    iceDir = iceHome
}
else
{
    iceDir = env['ICE_HOME']
    if (iceDir)
    {
        def translator = new File("$iceDir/bin/$slice2java")
        if (!translator.exists())
        {
            translator = new File("$iceDir/cpp/bin/$slice2java")
            if (!translator.exists())
            {
                throw new GradleException("Unable to find $slice2java in $iceDir, please verify ICE_HOME is " +
                                          "properly configured and Ice is correctly installed.")
            }
            srcdist = true
        }
    }
}

if (iceDir == null)
{
    def f1 = new File("/usr/bin/$slice2java")
    if (f1.exists())
    {
        iceDir = "/usr"
    }
}

if (iceDir == null && isWindows)
{
    def progFiles
    def arch1 = env['PROCESSOR_ARCHITECTURE']
    def arch2 = env['PROCESSOR_ARCHITEW6432']
    if (arch1 == "AMD64" || arch1 == "IA64" || arch2 == "AMD64" || arch2 == "IA64")
    {
        progFiles = env['ProgramFiles(x86)']
    }
    else
    {
        progFiles = env['ProgramFiles']
    }
    iceDir = "$progFiles\\ZeroC\\Ice-${project.version}"
}

if (iceDir == null)
{
    def f1 = new File("/usr/local/bin/$slice2java")
    if (f1.exists())
    {
        iceDir = "/usr/local"
    }
}

if (iceDir == null)
{
    throw new GradleException("Unable to find a valid Ice distribution, please verify ICE_HOME is properly " +
                              "configured and Ice is correctly installed.")
}

// Set the slice and java jar directory
if (iceDir == "/usr")
{
    ext.distJarDir = "/usr/share/java"
}
else if (iceDir == "/usr/local")
{
    ext.distJarDir = "/usr/local/share/java"
}
else if (srcdist)
{
    ext.distJarDir = "$iceDir/java/lib"
}
else
{
    ext.distJarDir = "$iceDir/lib"
}

