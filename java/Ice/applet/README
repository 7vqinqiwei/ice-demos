Introduction
------------

This demo presents an unsigned applet that shows how to make
asynchronous Ice invocations in a graphical application. It also
demonstrates how to configure IceSSL using a resource file as the
keystore.


Preparing the applet
--------------------

The demo includes a start page (hello.html) that you will need to
publish on a web server. This page assumes that the demo applet is
stored in a fully self-contained archive named Hello.jar. After a
successful build, copy Hello.jar from this subdirectory to the same
directory as hello.html on your web server.


Preparing the Ice server
------------------------

The applet requires a "hello" server. You can use the java server
from the ../hello directory or a hello server from any other Ice
language mapping. You may need to temporarily relax the firewall
restrictions on your server host to allow the applet to establish
connections to the hello server.


Java security policy
--------------------

The applet's JAR file is not signed, therefore the Java plug-in may
refuse to allow the applet to connect to the Ice server. In this
situation, the applet will report a SocketException in its status
bar, and the Java console will show an exception that includes an
"access denied" error.

To temporarily work around the issue, locate the java.policy file
on your system. For example, you might find it here:

  C:\Program Files\Java\jre1.8.0_xx\lib\security

Edit this file as an administrator. In the "grant" section, add the
line shown below:

  permission java.net.SocketPermission "<host>:1024-", "connect,resolve";

Replace "<host>" with the host name or IP address of the machine on
which the Ice server is running. For example, if you are loading the
applet locally as a file, replace "<host>" with "localhost".

Save the changes, restart the browser, and load the applet again to
confirm it can connect. Don't forget to remove this line from the
java.policy file when you're finished.


Loading the applet locally
--------------------------

The simplest way to use the applet is to open the start page
(hello.html) as a local file directly from your browser. In this case,
you must start the hello server on the same host and enter "localhost"
as the server host name in the applet.


Loading the applet from a web server
------------------------------------

Start a hello server on the web server host. Next, start a web browser
and open the start page (hello.html) on your web server.

Once the applet has started, verify that the name of your web server
host is shown correctly in the "Hostname" field.


Using the applet
----------------

Press the "Hello World!" button. You will notice that the server
prints a "Hello World!" message to the console for each invocation. To
make other types of Ice invocations, select a different mode from the
combobox.

The two sliders allow you to experiment with various timeout settings.
The "Timeout" slider determines how long the Ice run time will wait
for an invocation to complete, while the "Delay" slider forces the
server to delay its response. The value of each slider is shown in
seconds. To force a timeout, select a non-zero timeout and set the
delay to be larger than the timeout. The server prints two "Hello
World!" messages in this case because the Slice operation sayHello is
marked as idempotent, meaning that Ice does not need to follow the
at-most-once retry semantics. See the manual for more information
about retry behavior.
