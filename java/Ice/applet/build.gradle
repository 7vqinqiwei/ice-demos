// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

slice {
	java {
		include = ["${projectDir}", "${sliceDir}"]
		srcDir = '.'
	}
}

sourceSets {
	main {
		java {
			srcDir '.'
		}
	}
}

dependencies {
	compile localDependency("ice")
	if (!useLocalOnly) {
		runtime "org.apache.tools:bzip2:1.0"
	}
}

buildscript {
    repositories {
        maven {
            url 'http://repo.zeroc.com/nexus/content/repositories/thirdparty'
        }
    }
    if (!useLocalOnly) {
	    dependencies {
	        classpath group: 'net.sourceforge', name: 'proguard', version: '5.0'
	    }
    }
}

if (useLocalOnly) {
	jar {
		archiveName "Hello.jar"
	    destinationDir = new File("${projectDir}")
	    from { "${projectDir}/config.applet" }
	    from { "${rootProject.projectDir}/../certs/client.jks" }
	}
} else {
	// Don't create the default jar.
	jar.enabled = false

	def libJars = []
	['rt.jar', 'jsse.jar', 'i386/default/jclSC170/vm.jar', 'amd64/default/jclSC170/vm.jar', 'ibmcertpathfw.jar'].each {
		def jfile = searchFile([{System.env['JAVA_HOME']}, {System.properties['java.home']}],
	                           ["${it}", "lib/${it}", "jre/lib/${it}"])
	    if (jfile) {
	    	libJars << jfile
	    }
	}

	task proguardJar(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
		injars configurations.compile.resolve(), filter: '!META-INF/**'
		injars "${projectDir}/build/classes/main"
		injars "${rootProject.projectDir}/../certs/client.jks"
		injars "${projectDir}/config.applet"
		outjars "${projectDir}/Hello.jar"
		libraryjars libJars
		configuration 'applet.pro'
	}
	assemble.dependsOn(proguardJar)
}
